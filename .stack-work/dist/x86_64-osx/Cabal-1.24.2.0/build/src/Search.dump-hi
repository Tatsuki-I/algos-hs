
==================== FINAL INTERFACE ====================
2017-07-25 04:35:30.422434 UTC

interface algos-hs-0.1.0.0-4Sko5DL6jdz40iPla4bF54:Search 8002
  interface hash: 41d326145e4943aa46231ea304b10d05
  ABI hash: 1801d4d9ba8813eb6b998f10c6b100f3
  export-list hash: 1ef522a60b583520033e85c702330eb5
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: f6624f22fcdd76ed0ac6625466e2d712
  sig of: Nothing
  used TH splices: False
  where
exports:
  Search.binarySearch
  Search.binarySearch'
  Search.binarySearch''
  Search.isSorted
  Search.sequentialSearch
  Search.sequentialSearchMaybe
  Search.showError
  Search.SearchError{Search.Unsorted}
module dependencies: Sort.QuickSort
package dependencies: base-4.9.1.0* ghc-prim-0.5.0.0
                      integer-gmp-1.0.0.1
orphans: base-4.9.1.0:GHC.Base base-4.9.1.0:GHC.Float
family instance modules: base-4.9.1.0:Control.Applicative
                         base-4.9.1.0:Data.Either base-4.9.1.0:Data.Functor.Const
                         base-4.9.1.0:Data.Monoid base-4.9.1.0:Data.Type.Equality
                         base-4.9.1.0:GHC.Generics base-4.9.1.0:GHC.IO.Exception
                         base-4.9.1.0:GHC.TypeLits
import  -/  Sort.QuickSort 06ac065a375130e0635ed983dcefaa31
  exports: b54122d1614c0944d0f17d3d29b6d76a
  quickSort 4e5881bbb36720e6f61979dcf1d51b23
import  -/  base-4.9.1.0:Data.Either 20b09ef8d0a5b74fdec011c40c1587f5
import  -/  base-4.9.1.0:Data.Foldable 3e0b6967a1da89945d0e2d47266337a2
import  -/  base-4.9.1.0:GHC.Base c4231c43c07e46080a26bf94094c7aa1
import  -/  base-4.9.1.0:GHC.List ab8c4e523e6c479c549d3bcd5fc4a439
import  -/  base-4.9.1.0:GHC.Num 00bfaa7b2f9d6084913c0697a8a49ec8
import  -/  base-4.9.1.0:GHC.Real 82e4e59051a13dba1da63e1e970a69e6
import  -/  base-4.9.1.0:GHC.Show a027f5ac24879eaba752f44aa90fe511
import  -/  base-4.9.1.0:Prelude 22dd289b8469a8fa8dc81cab7b237771
import  -/  ghc-prim-0.5.0.0:GHC.Classes 0bdf3d057a415ec1b84a7b1994efbe47
68fd204e216ef9ba9d5975080c12638d
  $fShowSearchError :: GHC.Show.Show Search.SearchError
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Search.SearchError
                  Search.$fShowSearchError_$cshowsPrec
                  Search.$fShowSearchError_$cshow
                  Search.$fShowSearchError_$cshowList -}
68fd204e216ef9ba9d5975080c12638d
  $fShowSearchError1 :: Search.SearchError -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*H><L,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ds :: Search.SearchError) (eta :: GHC.Base.String) ->
                 case ds of wild { Search.Unsorted ->
                 GHC.Base.augment
                   @ GHC.Types.Char
                   (\ @ b
                      (c :: GHC.Types.Char -> b -> b)[OneShot]
                      (n :: b)[OneShot] ->
                    GHC.Base.foldr @ GHC.Types.Char @ b c n Search.$fShowSearchError2)
                   eta }) -}
95face7c60d71e6d63ef041a2c7c2c19
  $fShowSearchError2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Unsorted"#) -}
68fd204e216ef9ba9d5975080c12638d
  $fShowSearchError_$cshow :: Search.SearchError -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*H>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Search.SearchError) ->
                 case x of wild { Search.Unsorted -> Search.$fShowSearchError2 }) -}
68fd204e216ef9ba9d5975080c12638d
  $fShowSearchError_$cshowList ::
    [Search.SearchError] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ Search.SearchError
                   Search.$fShowSearchError1) -}
68fd204e216ef9ba9d5975080c12638d
  $fShowSearchError_$cshowsPrec ::
    GHC.Types.Int -> Search.SearchError -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,A><S,1*H><L,1*U>,
     Unfolding: InlineRule (3, True, False)
                (\ (ds :: GHC.Types.Int)
                   (ds1 :: Search.SearchError)
                   (eta :: GHC.Base.String) ->
                 case ds1 of wild { Search.Unsorted ->
                 GHC.Base.augment
                   @ GHC.Types.Char
                   (\ @ b
                      (c :: GHC.Types.Char -> b -> b)[OneShot]
                      (n :: b)[OneShot] ->
                    GHC.Base.foldr @ GHC.Types.Char @ b c n Search.$fShowSearchError2)
                   eta }) -}
5bfea24886e9c38150a6d29e48a0d81c
  $tc'Unsorted :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   17911443700425769699##
                   10097759451991073571##
                   Search.$trModule
                   Search.$tc'Unsorted1) -}
78cbb3ecc1aa83ec3caee2a37d2161d1
  $tc'Unsorted1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Unsorted"#) -}
3af4d3d17d5ea12ed3c2e92cf7f6c501
  $tcSearchError :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   2580080414229512026##
                   8320516130045501191##
                   Search.$trModule
                   Search.$tcSearchError1) -}
ca00fccc67b847e408be2bb4da30f984
  $tcSearchError1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "SearchError"#) -}
9d567d0c593658bd6b16eb41c2af2ce9
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   Search.$trModule2
                   Search.$trModule1) -}
edc42e399e70fb870f4f0cfa263bd883
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Search"#) -}
a9ffc6cf1b1131d3b16a091616772f51
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   "algos-hs-0.1.0.0-4Sko5DL6jdz40iPla4bF54"#) -}
68fd204e216ef9ba9d5975080c12638d
  data SearchError = Unsorted
c41dbc277a469f5e146ee04e2b645746
  binarySearch ::
    GHC.Classes.Ord a =>
    [a] -> a -> Data.Either.Either Search.SearchError GHC.Types.Bool
  {- Arity: 3,
     Strictness: <L,U(U(C(C1(U)),A),A,C(C1(U)),C(C1(U)),C(C1(U)),A,A,A)><S,1*U><L,U> -}
099e4524658380b306a62504c1539ef4
  binarySearch' :: GHC.Classes.Ord a => [a] -> a -> GHC.Types.Bool
  {- Arity: 3,
     Strictness: <L,U(U(C(C1(U)),A),A,C(C1(U)),A,C(C1(U)),A,A,A)><S,1*U><L,U> -}
74f07da8b8b43ced7fc105d3e80ff8bc
  binarySearch'' :: GHC.Classes.Ord a => [a] -> a -> GHC.Types.Bool
  {- Arity: 3,
     Strictness: <L,U(U(C(C1(U)),A),A,C(C1(U)),C(C1(U)),C(C1(U)),A,A,A)><S,1*U><L,U> -}
efc3ba244a2806608569d0b51534dcf6
  isSorted :: GHC.Classes.Ord a => [a] -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <L,U(A,A,A,C(C1(U)),A,A,A,A)><S,1*U> -}
0571b67aa930ec55c0633b78c17e93a7
  sequentialSearch :: GHC.Classes.Eq a => [a] -> a -> GHC.Types.Bool
  {- Arity: 3, HasNoCafRefs,
     Strictness: <L,U(C(C1(U)),A)><S,1*U><L,U> -}
42bbb02ed0944599e914d65464800f48
  sequentialSearchMaybe ::
    GHC.Classes.Eq a => [a] -> a -> GHC.Base.Maybe GHC.Types.Int
  {- Arity: 3, HasNoCafRefs,
     Strictness: <L,U(C(C1(U)),A)><S,1*U><L,U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ a ($dEq :: GHC.Classes.Eq a) (xs :: [a]) (t :: a) ->
                 Search.sequentialSearchMaybe_sSearchMaybe'
                   @ a
                   $dEq
                   xs
                   t
                   Search.sequentialSearchMaybe1) -}
639ed7c632f06c2478a29074516f56fe
  sequentialSearchMaybe1 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 0#) -}
acb0e3bb77caa9f24907b3efb20a4e4b
  sequentialSearchMaybe_sSearchMaybe' ::
    GHC.Classes.Eq a =>
    [a] -> a -> GHC.Types.Int -> GHC.Base.Maybe GHC.Types.Int
  {- Arity: 4, HasNoCafRefs,
     Strictness: <L,U(C(C1(U)),A)><S,1*U><L,U><L,U(U)> -}
b0f51fb0d128b2cc0dfef49deb797e70
  showError :: Search.SearchError -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*H>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Search.SearchError) ->
                 case ds of wild { Search.Unsorted -> Search.showError1 }) -}
2ad0da736e086eb76ec0148f78b02d14
  showError1 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "This list is unsorted."#) -}
instance [safe] GHC.Show.Show [Search.SearchError]
  = Search.$fShowSearchError
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False



==================== FINAL INTERFACE ====================
2017-07-15 06:27:21.25371 UTC

interface algos-hs-0.1.0.0-8t08XiJuizj41xgenO3a7P:Search 8002
  interface hash: 22473c85a775ded099122a31019f470b
  ABI hash: e7a03aecd653a8e050cd9e1de9b09630
  export-list hash: c8c21478c42f8084892753e9fd59781a
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: f6624f22fcdd76ed0ac6625466e2d712
  sig of: Nothing
  used TH splices: False
  where
exports:
  Search.binarySearch
  Search.binarySearch'
  Search.binarySearch''
  Search.isSorted
  Search.sequentialSearch
  Search.showError
  Search.SearchError{Search.Unsorted}
module dependencies: Sort.QuickSort
package dependencies: base-4.9.1.0* ghc-prim-0.5.0.0
                      integer-gmp-1.0.0.1
orphans: base-4.9.1.0:GHC.Base base-4.9.1.0:GHC.Float
family instance modules: base-4.9.1.0:Control.Applicative
                         base-4.9.1.0:Data.Either base-4.9.1.0:Data.Functor.Const
                         base-4.9.1.0:Data.Monoid base-4.9.1.0:Data.Type.Equality
                         base-4.9.1.0:GHC.Generics base-4.9.1.0:GHC.IO.Exception
                         base-4.9.1.0:GHC.TypeLits
import  -/  Sort.QuickSort 63c85ae5b00994a8c1503cdfc2039bb1
  exports: da0b5008b6da3c2bddef0bf9da2a9026
  quickSort 1d1c7836fb8117f2224a75764a0232cb
import  -/  base-4.9.1.0:Data.Either 20b09ef8d0a5b74fdec011c40c1587f5
import  -/  base-4.9.1.0:Data.Foldable 3e0b6967a1da89945d0e2d47266337a2
import  -/  base-4.9.1.0:GHC.Base c4231c43c07e46080a26bf94094c7aa1
import  -/  base-4.9.1.0:GHC.List ab8c4e523e6c479c549d3bcd5fc4a439
import  -/  base-4.9.1.0:GHC.Num 00bfaa7b2f9d6084913c0697a8a49ec8
import  -/  base-4.9.1.0:GHC.Real 82e4e59051a13dba1da63e1e970a69e6
import  -/  base-4.9.1.0:GHC.Show a027f5ac24879eaba752f44aa90fe511
import  -/  base-4.9.1.0:Prelude 22dd289b8469a8fa8dc81cab7b237771
import  -/  ghc-prim-0.5.0.0:GHC.Classes 0bdf3d057a415ec1b84a7b1994efbe47
af3c9d48368088573a3bf434cbfd829d
  $fShowSearchError :: GHC.Show.Show Search.SearchError
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Search.SearchError
                  Search.$fShowSearchError_$cshowsPrec
                  Search.$fShowSearchError_$cshow
                  Search.$fShowSearchError_$cshowList -}
af3c9d48368088573a3bf434cbfd829d
  $fShowSearchError1 :: Search.SearchError -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*H><L,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ds :: Search.SearchError) (eta :: GHC.Base.String) ->
                 case ds of wild { Search.Unsorted ->
                 GHC.Base.augment
                   @ GHC.Types.Char
                   (\ @ b
                      (c :: GHC.Types.Char -> b -> b)[OneShot]
                      (n :: b)[OneShot] ->
                    GHC.Base.foldr @ GHC.Types.Char @ b c n Search.$fShowSearchError2)
                   eta }) -}
106075f300524d0f00702113e159644d
  $fShowSearchError2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Unsorted"#) -}
af3c9d48368088573a3bf434cbfd829d
  $fShowSearchError_$cshow :: Search.SearchError -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*H>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Search.SearchError) ->
                 case x of wild { Search.Unsorted -> Search.$fShowSearchError2 }) -}
af3c9d48368088573a3bf434cbfd829d
  $fShowSearchError_$cshowList ::
    [Search.SearchError] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ Search.SearchError
                   Search.$fShowSearchError1) -}
af3c9d48368088573a3bf434cbfd829d
  $fShowSearchError_$cshowsPrec ::
    GHC.Types.Int -> Search.SearchError -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,A><S,1*H><L,1*U>,
     Unfolding: InlineRule (3, True, False)
                (\ (ds :: GHC.Types.Int)
                   (ds1 :: Search.SearchError)
                   (eta :: GHC.Base.String) ->
                 case ds1 of wild { Search.Unsorted ->
                 GHC.Base.augment
                   @ GHC.Types.Char
                   (\ @ b
                      (c :: GHC.Types.Char -> b -> b)[OneShot]
                      (n :: b)[OneShot] ->
                    GHC.Base.foldr @ GHC.Types.Char @ b c n Search.$fShowSearchError2)
                   eta }) -}
71b429e95fe6c531a9f819f5dd69a56b
  $tc'Unsorted :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   3978931087139484933##
                   2675501986454942944##
                   Search.$trModule
                   Search.$tc'Unsorted1) -}
579fcaf1b9bf94e51fccf0bbf43583a6
  $tc'Unsorted1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Unsorted"#) -}
e80f1def0f30ffab4d8f13562bc0d35f
  $tcSearchError :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   16817334741472156576##
                   17654106948272540076##
                   Search.$trModule
                   Search.$tcSearchError1) -}
3a1fe8cfe14fabeba5bdeb24bea79dee
  $tcSearchError1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "SearchError"#) -}
d7e92fda1f873ee0a3fa4e9f13754d3c
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   Search.$trModule2
                   Search.$trModule1) -}
7ac2571ed47b3974a66703e789b9bea2
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Search"#) -}
392c20d05892a5cabdc0b79d0793479f
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   "algos-hs-0.1.0.0-8t08XiJuizj41xgenO3a7P"#) -}
af3c9d48368088573a3bf434cbfd829d
  data SearchError = Unsorted
92f3d2e255f141a4cde25c77448554e3
  binarySearch ::
    GHC.Classes.Ord a =>
    [a] -> a -> Data.Either.Either Search.SearchError GHC.Types.Bool
  {- Arity: 3,
     Strictness: <L,U(U(C(C1(U)),A),A,C(C1(U)),C(C1(U)),C(C1(U)),A,A,A)><S,1*U><L,U> -}
0a8cf8ba9a34b52ecfd02e4a7fdd4a6b
  binarySearch' :: GHC.Classes.Ord a => [a] -> a -> GHC.Types.Bool
  {- Arity: 3,
     Strictness: <L,U(U(C(C1(U)),A),A,C(C1(U)),A,C(C1(U)),A,A,A)><S,1*U><L,U> -}
23abbb1fea1f7140ae340622ebfea5c4
  binarySearch'' :: GHC.Classes.Ord a => [a] -> a -> GHC.Types.Bool
  {- Arity: 3,
     Strictness: <L,U(U(C(C1(U)),A),A,C(C1(U)),C(C1(U)),C(C1(U)),A,A,A)><S,1*U><L,U> -}
fe71a7ad17c81a0e2092587d9a60ba37
  isSorted :: GHC.Classes.Ord a => [a] -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <L,U(A,A,A,C(C1(U)),A,A,A,A)><S,1*U> -}
0dbccd93a62f1016cb2b1940d9c4fb93
  sequentialSearch :: GHC.Classes.Eq a => [a] -> a -> GHC.Types.Bool
  {- Arity: 3, HasNoCafRefs,
     Strictness: <L,U(C(C1(U)),A)><S,1*U><L,U> -}
90d4d43862709d33345fe4e7afd14618
  showError :: Search.SearchError -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*H>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Search.SearchError) ->
                 case ds of wild { Search.Unsorted -> Search.showError1 }) -}
74d456dd0cffecfe298c1d578e129f5d
  showError1 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "This list is unsorted."#) -}
instance [safe] GHC.Show.Show [Search.SearchError]
  = Search.$fShowSearchError
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

